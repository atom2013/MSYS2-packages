From 44bb1334481a2d7c84588c413f5cace86b8f6e6c Mon Sep 17 00:00:00 2001
From: Alexey Pavlov <alexpux@gmail.com>
Date: Tue, 2 Jun 2020 14:28:09 +0300
Subject: [PATCH 22/N] Don't create WSL symlinks for MSYS2

---
 winsup/cygwin/path.cc | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/winsup/cygwin/path.cc b/winsup/cygwin/path.cc
index 927efd8..2dfe0ef 100644
--- a/winsup/cygwin/path.cc
+++ b/winsup/cygwin/path.cc
@@ -1955,6 +1955,7 @@ typedef struct _REPARSE_LX_SYMLINK_BUFFER
   } LxSymlinkReparseBuffer;
 } REPARSE_LX_SYMLINK_BUFFER,*PREPARSE_LX_SYMLINK_BUFFER;
 
+#ifndef __MSYS__
 static int
 symlink_wsl (const char *oldpath, path_conv &win32_newpath)
 {
@@ -2025,6 +2026,7 @@ symlink_wsl (const char *oldpath, path_conv &win32_newpath)
   NtClose (fh);
   return 0;
 }
+#endif
 
 int
 symlink_worker (const char *oldpath, path_conv &win32_newpath, bool isdevice)
@@ -2109,6 +2111,7 @@ symlink_worker (const char *oldpath, path_conv &win32_newpath, bool isdevice)
 	    }
 	  /* Otherwise, fall back to default symlink type. */
 	  wsym_type = WSYM_sysfile;
+#ifndef __MSYS__
 	  fallthrough;
 	case WSYM_sysfile:
 	  if (win32_newpath.fs_flags () & FILE_SUPPORTS_REPARSE_POINTS)
@@ -2120,6 +2123,7 @@ symlink_worker (const char *oldpath, path_conv &win32_newpath, bool isdevice)
 	  /* On FSes not supporting reparse points, or in case of an error
 	     creating the WSL symlink, fall back to creating the plain old
 	     SYSTEM file symlink. */
+#endif
 	  break;
 	default:
 	  break;
-- 
2.29.2

